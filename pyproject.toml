[tool.black]
skip-string-normalization = true
line-length = 120

[tool.ruff]
# Same as Black.
line-length = 120

exclude = ["jupyter_notebook_config.py"]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # too complex
    "E402",  # module import at top of file
]

[tool.ruff.isort]
order-by-type = true
relative-imports-order = "closest-to-furthest"
extra-standard-library = ["typing"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
known-first-party = []

[tool.poetry]
name = "ekinox-test"
version = "0.1.0"
description = ""
authors = ["Raphael Vienne <raphael.vienne@live.fr>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10, <3.13"
black = "^23.10.1"
ruff = "^0.1.3"
pytest = "^7.4.3"
pre-commit = "^3.5.0"
streamlit = "^1.28.0"
pandas = "^2.1.2"
scikit-learn = "^1.3.2"
matplotlib = "^3.8.1"
joblib = "^1.3.2"
plotly = "^5.18.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
